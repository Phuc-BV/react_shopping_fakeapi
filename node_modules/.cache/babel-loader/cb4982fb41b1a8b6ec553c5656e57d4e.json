{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\nconst categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    data: [],\n    status: STATUS.IDLE,\n    catProductAll: [],\n    catProductAllStatus: STATUS.IDLE,\n    catProductSingle: [],\n    catProductSingleStatus: STATUS.IDLE\n  },\n  reducers: {\n    setCategories(state, action) {\n      state.data = action.payload;\n    },\n\n    setStatus(state, action) {\n      state.status = action.payload;\n    },\n\n    setCategoriesProductAll(state, action) {\n      state.catProductAll.push(action.payload);\n    },\n\n    setCategoriesStatusAll(state, action) {\n      state.catProductAllStatus = action.payload;\n    },\n\n    setCategoriesProductSingle(state, action) {\n      state.catProductSingle = action.payload;\n    },\n\n    setCategoriesStatusSingle(state, action) {\n      state.catProductSingleStatus = action.payload;\n    } // ...\n\n\n  }\n});\nexport const {\n  setCategories,\n  setStatus,\n  setCategoriesProductAll,\n  setCategoriesStatusAll,\n  setCategoriesProductSingle,\n  setCategoriesStatusSingle\n} = categorySlice.actions;\nexport default categorySlice.reducer;\nexport const fetchCategories = () => {\n  return async function fetchCategoryThunk(dispatch) {\n    dispatch(setStatus(STATUS.LOADING));\n\n    try {\n      const response = await fetch(`${BASE_URL}categories`);\n      const data = await response.json();\n      dispatch(setCategories(data.slice(0, 5)));\n      dispatch(setStatus(STATUS.IDLE));\n    } catch (error) {\n      dispatch(setStatus(STATUS.ERROR));\n    }\n  };\n};\nexport const fetchProductsByCategory = (categoryID, dataType) => {\n  return async function fetchCategoryProductThunk(dispatch) {\n    if (dataType === 'all') dispatch(setCategoriesStatusAll(STATUS.LOADING));\n    if (dataType === 'single') dispatch(setCategoriesStatusSingle(STATUS.LOADING));\n\n    try {\n      const response = await fetch(`${BASE_URL}categories/${categoryID}/products`);\n      const data = await response.json();\n\n      if (dataType === 'all') {\n        dispatch(setCategoriesProductAll(data.slice(0, 25)));\n        dispatch(setCategoriesStatusAll(STATUS.IDLE));\n      }\n\n      if (dataType === 'single') {\n        dispatch(setCategoriesProductSingle(data.slice(0, 20)));\n        dispatch(setCategoriesStatusSingle(STATUS.IDLE));\n      }\n    } catch (error) {\n      dispatch(setCategoriesStatusAll(STATUS.ERROR));\n    }\n  };\n};","map":{"version":3,"names":["createSlice","BASE_URL","STATUS","categorySlice","name","initialState","data","status","IDLE","catProductAll","catProductAllStatus","catProductSingle","catProductSingleStatus","reducers","setCategories","state","action","payload","setStatus","setCategoriesProductAll","push","setCategoriesStatusAll","setCategoriesProductSingle","setCategoriesStatusSingle","actions","reducer","fetchCategories","fetchCategoryThunk","dispatch","LOADING","response","fetch","json","slice","error","ERROR","fetchProductsByCategory","categoryID","dataType","fetchCategoryProductThunk"],"sources":["D:/DEV/FE/shopping-reactjs-fakeapi/shopping-reactjs-fakeapi/src/store/categorySlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\n\nconst categorySlice = createSlice({\n    name: 'category',\n    initialState: {\n        data: [],\n        status: STATUS.IDLE,\n        catProductAll : [],\n        catProductAllStatus: STATUS.IDLE,\n        catProductSingle : [],\n        catProductSingleStatus: STATUS.IDLE\n    },\n\n    reducers: {\n        setCategories(state, action){\n            state.data = action.payload;\n        },\n        setStatus(state, action){\n            state.status = action.payload;\n        },\n        setCategoriesProductAll(state, action){\n            state.catProductAll.push(action.payload);\n        },\n        setCategoriesStatusAll(state, action){\n            state.catProductAllStatus = action.payload;\n        },\n        setCategoriesProductSingle(state, action){\n            state.catProductSingle = action.payload;\n        },\n        setCategoriesStatusSingle(state, action){\n            state.catProductSingleStatus = action.payload;\n        }\n        // ...\n    }\n});\n\nexport const { setCategories, setStatus, setCategoriesProductAll, setCategoriesStatusAll, setCategoriesProductSingle, setCategoriesStatusSingle } = categorySlice.actions;\nexport default categorySlice.reducer;\n\nexport const fetchCategories = () => {\n    return async function fetchCategoryThunk(dispatch){\n        dispatch(setStatus(STATUS.LOADING));\n        try{\n            const response = await fetch(`${BASE_URL}categories`);\n            const data = await response.json();\n            dispatch(setCategories(data.slice(0, 5)));\n            dispatch(setStatus(STATUS.IDLE));\n        } catch(error){\n            dispatch(setStatus(STATUS.ERROR));\n        }\n    }\n}\n\nexport const fetchProductsByCategory = (categoryID, dataType) => {\n    return async function fetchCategoryProductThunk(dispatch){\n        if(dataType === 'all') dispatch(setCategoriesStatusAll(STATUS.LOADING));\n        if(dataType === 'single') dispatch(setCategoriesStatusSingle(STATUS.LOADING));\n        \n        try{\n            const response = await fetch(`${BASE_URL}categories/${categoryID}/products`);\n            const data = await response.json();\n            if(dataType === 'all'){\n                dispatch(setCategoriesProductAll(data.slice(0, 25)));\n                dispatch(setCategoriesStatusAll(STATUS.IDLE));\n            }\n            if(dataType === 'single'){\n                dispatch(setCategoriesProductSingle(data.slice(0, 20)));\n                dispatch(setCategoriesStatusSingle(STATUS.IDLE));\n            }\n        } catch(error){\n            dispatch(setCategoriesStatusAll(STATUS.ERROR));\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}